buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.github.jk1:gradle-license-report:1.17'
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
        classpath 'gradle.plugin.com.palantir.gradle.gitversion:gradle-git-version:0.10.1'
        classpath "io.qameta.allure:allure-gradle:2.8.0"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:6.25.0"
    }
}

static def getGitCommit() {
    //return gitVersion();
    def counter = 0
    def process = "git rev-parse --short=9 HEAD".execute()
    counter = process.text.trim()
    return counter
}

def getGitBranch() {
    if (project.hasProperty("branchname") && branchname != null)
        return branchname.replaceAll("\\s", "").trim()

    try {
        def details = versionDetails()
        if (details.branchName != null)
            return details.branchName.replaceAll("\\s", "").trim()
    } catch (ignore) {}

    // Get hash for current version:
    def process = "git rev-parse --short=9 HEAD".execute()
    def hash = ""
    hash = process.text.trim()

    println "Hash = $hash"
    def branch = ""
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        branch = "dev"
    } else {
        def process2 = "git reflog show --all".execute() | "grep $hash".execute() | ['sed', 's/[@].*\$//'].execute() | ['sed', 's@.*/@@'].execute()
        //def process2 = "git reflog show --all | grep $hash | sed 's/[@].*\$//' | sed 's@.*/@@'".execute()
        branch = process2.text.trim()
    }

    return branch.replaceAll("\\s", "").trim()
}

apply plugin: 'com.github.jk1.dependency-license-report'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'idea'
apply plugin: "com.palantir.git-version"
apply plugin: 'com.diffplug.spotless'

spotless {
    java {
        // Option 1: Prettier
        // prettier(['prettier': '2.8.8', 'prettier-plugin-java': '2.2.0']).config(['parser': 'java', 'tabWidth': 2])

        // Option 2: Eclipse xml
        // eclipse('4.26').configFile('./config/checkstyle/EclypseCodestyle.xml')

        // Option 3: Google style
        // googleJavaFormat()

        // Option 4: Palantir with Google styling
        palantirJavaFormat().style("GOOGLE")
        formatAnnotations()
        removeUnusedImports()
    }
}

group = 'com.graebert'
archivesBaseName = 'fluorine'
version = getGitBranch() + '.' + getGitCommit()
println "App version: " + version

project.ext.moduleName = "com.graebert~fluorine~$version" as GStringImpl

def vertxversion = '4.4.6'
def awsversion = '1.12.524'
println "Java version: " + JavaVersion.current()

if (!JavaVersion.current().java8Compatible) {
    throw new IllegalStateException('''A Haiku:
                                      |  This needs Java 8,
                                      |  You are using something else,
                                      |  Refresh. Try again.'''.stripMargin())
}

repositories {
    mavenCentral()
    maven {
        url = 'http://oss.sonatype.org/content/repositories/snapshots/'
        allowInsecureProtocol = true
    }
}

configurations {
    agent
    testCompile
}

dependencies {

    implementation files('lib/DaxJavaClient-latest.jar')

    // vertx
    implementation("io.vertx:vertx-web:$vertxversion")
    implementation("io.vertx:vertx-core:$vertxversion")
    implementation("io.vertx:vertx-circuit-breaker:$vertxversion")
    implementation("io.vertx:vertx-web-openapi:$vertxversion")
    implementation("io.vertx:vertx-dropwizard-metrics:$vertxversion")

    // annotation
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    annotationProcessor("javax.annotation:javax.annotation-api:1.3.2")

    // aws-sdk
    implementation group: 'com.amazonaws', name: 'amazon-dax-client', version: '1.0.230341.0'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: "${awsversion}"
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-cloudsearch', version: "${awsversion}"
    implementation group: 'com.amazonaws', name: 'elasticache-java-cluster-client', version: '1.2.0'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-secretsmanager', version: "${awsversion}"
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-ses', version: "${awsversion}"
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-core', version: "${awsversion}"
    implementation group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-core', version: '2.7.0'
    implementation group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-apache-http', version: '2.9.0'
    implementation group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-aws-sdk', version: '2.7.0'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-sqs', version: "${awsversion}"
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-cloudfront', version: "${awsversion}"
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-rekognition', version: "${awsversion}"
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-transcribe', version: "${awsversion}"
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-translate', version: "${awsversion}"
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-kinesis', version: "${awsversion}"

    // rate-limiter
    implementation group: 'io.github.resilience4j', name: 'resilience4j-ratelimiter', version: '1.7.1'

    // commons
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.16.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.15.1'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

    // logging
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.22.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.22.1'
    implementation group: 'com.logentries', name: 'logentries-appender', version: '1.1.38'

    // google-services
    implementation group: 'com.google.guava', name: 'guava', version: '33.0.0-jre'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    implementation group: 'com.google.api-client', name: 'google-api-client', version: '2.2.0'
    implementation group: 'com.google.apis', name: 'google-api-services-drive', version: 'v3-rev20231128-2.0.0'

    // storages services
    implementation group: 'com.box', name: 'box-java-sdk', version: '4.6.1'
    implementation group: 'org.bitbucket.b_c', name: 'jose4j', version: '0.9.4'
    implementation group: 'com.dropbox.core', name: 'dropbox-core-sdk', version: '6.0.0'
    implementation group: 'org.apache.santuario', name: 'xmlsec', version: '4.0.1'
    implementation group: 'com.onelogin', name: 'java-saml', version: '2.9.0'
    implementation group: 'com.github.lookfirst', name: 'sardine', version: '5.12'
    implementation group: 'com.github.spullara.mustache.java', name: 'compiler', version: '0.9.11'

    // utils and other sub-dependencies
    implementation group: 'jakarta.mail', name: 'jakarta.mail-api', version: '2.1.2'
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.1'
    implementation group: 'com.github.ua-parser', name: 'uap-java', version: '1.6.1'
    implementation group: 'com.timgroup', name: 'java-statsd-client', version: '3.1.0'
    implementation group: 'io.intercom', name: 'intercom-java', version: '2.8.2'
    implementation group: 'com.auth0', name: 'java-jwt', version: '4.4.0'
    implementation group: 'com.konghq', name: 'unirest-java', version: '3.14.5'
    implementation group: 'io.netty', name: 'netty-all', version: '4.1.101.Final'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.15.3'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.3'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '2.2'
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.17.2'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk18on', version: '1.77'
    implementation group: 'com.eclipsesource.minimal-json', name: 'minimal-json', version: '0.9.5'
    implementation group: 'com.amirkhawaja', name: 'ksuid', version: '2.0.0-RC1'
    implementation group: 'org.jetbrains', name: 'annotations', version: '24.1.0'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '3.0.1'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.12.0'
    implementation group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.21'
    implementation group: 'io.github.java-diff-utils', name: 'java-diff-utils', version: '4.12'
    implementation group: 'org.apache.tika', name: 'tika-core', version: '2.9.1'
    implementation group: 'com.postmarkapp', name: 'postmark', version: '1.11.1'

    // Test dependencies
    testImplementation "io.vertx:vertx-unit:$vertxversion"
    testImplementation('jakarta.xml.bind:jakarta.xml.bind-api:4.0.1')
    testImplementation('com.sun.xml.bind:jaxb-impl:4.0.4')
    testImplementation('com.sun.xml.bind:jaxb-core:4.0.4')
    testImplementation('jakarta.activation:jakarta.activation-api:2.1.2')
    testImplementation('org.glassfish.jaxb:jaxb-runtime:4.0.4')
    testImplementation 'com.codeborne:selenide:6.16.0'
    testImplementation 'org.testng:testng:7.9.0'
    testImplementation 'com.googlecode.jcsv:jcsv:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'net.datafaker:datafaker:2.0.2'
    testImplementation(group: 'org.apache.maven.doxia', name: 'doxia-site-renderer', version: '2.0.0-M16') {
        exclude group: 'commons-collections', module: 'commons-collections'
    }
    testImplementation group: 'org.freemarker', name: 'freemarker', version: '2.3.32'
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.13.0'
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-server', version: '3.141.59'
    testImplementation group: 'com.aventstack', name: 'extentreports', version: '5.1.1'

    agent 'org.aspectj:aspectjweaver:1.9.21'

}

mainClassName = 'com.graebert.storage.main.Launcher'
def mainVerticleName = 'com.graebert.storage.main.Server'

// Vert.x watches for file changes in all subdirectories
// of src/ but only for files with .java extension
def watchForChange = 'src/**/*.java'

// Vert.x will call this task on changes
def doOnChange
if (System.getProperty("os.name").toLowerCase().contains("windows")) {
    doOnChange = '.\\gradlew classes'
} else {
    doOnChange = './gradlew classes'
}


run {
//args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
    args = ["--launcher-class=$mainClassName", 'run', mainVerticleName, "-Dvertx.metrics.options.enabled=true -Dvertx.metrics.options.jmxEnabled=true", "-Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory"]
//  args = ['stop', mainVerticleName, "--launcher-class=$mainClassName"]
//  args = ['list', mainVerticleName, "--launcher-class=$mainClassName"]
}

shadowJar {
    zip64 = true
    getArchiveClassifier().set('fat')
    manifest {
        attributes 'Main-Verticle': mainVerticleName,
                'Main-Class': mainClassName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

wrapper {
    gradleVersion = '7.0'
}

apply plugin: 'io.qameta.allure'

allure {
    version = '2.8.0'
    autoconfigure = true
    aspectjweaver = true
    allureJavaVersion = '2.8.0'
}

import com.github.jk1.license.render.JsonReportRenderer
import org.codehaus.groovy.runtime.GStringImpl

licenseReport {
    renderers = [new JsonReportRenderer()]
    configurations = ['runtimeClasspath']
}

tasks.register('uitest', Test) {
    if (project.hasProperty("url")) {
        systemProperty 'url', url
    }

    useTestNG() {
        suites 'src/test/resources/testng.xml'
        useDefaultListeners = true
        outputDirectory = file("$project.buildDir//testngOutput")
    }

    testLogging.showStandardStreams = true
}

test {
    //jvmArgs += ["--add-modules", "java.xml.bind"] // for java9
    testLogging.showStandardStreams = true
}